// Default workflow parameters



params {
    threads = 1
    basecall = false
    p01 = 0.0182
    p11 = 0.996
    min_proportion = 0.01
    concentration = 5.0
    read_end_filter = 25
    nanomix_model = "llse"
    num_trials = 10
    atlas = "${projectDir}/atlases/39Bisulfite.tsv"
    guppy_model = "dna_r9.4.1_450bps_modbases_5mc_hac.cfg"
    guppy = "/.mounts/labs/ont/software/guppy-6.3.2/bin/guppy_basecaller"
    reference = "/.mounts/labs/simpsonlab/data/references/GRCh38_no_alt_analysis_set.GCA_000001405.15.fna"
    help = false
    version = false
    monochrome_logs = false
    validate_params = true
    disable_ping = false
    out_dir = "${launchDir}"
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,wf'
    wf {
        example_cmd = [
            "nextflow run main.nf --out_dir /path/to/out_dir",
        ]
    }
}

manifest {
    name            = 'epi2me-labs/wf-deconvolution'
    author          = 'Jonathan Broadbent, Jared Simpson'
    homePage        = 'https://github.com/epi2me-labs/wf-deconvolution'
    description     = 'Methylation deconvolution pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version         = 'v0.1.0'
}

timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
  overwrite = true
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
  overwrite = true
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    cluster {
        executor {
            name = 'sge'
            queueSize = 499
        }
        process {
            penv = 'smp'
            memory = '1G'
            cpus = '1'
            time = '12h'
            clusterOptions = { "-l h_vmem=${task.memory.toMega()/task.cpus}M -V -P simpsonlab -l h_stack=32M -m beas -M jbroadbent@oicr.on.ca" }
            conda = '/.mounts/labs/simpsonlab/sw/miniconda3/envs/nanomix_buildnode'
            withLabel: GPU {
                clusterOptions = { "-l gpu=2 -l h_vmem=${task.memory.toMega()/task.cpus}M -V -P simpsonlab -l h_stack=32M -m beas -M jbroadbent@oicr.on.ca" }
            }
        }
    }
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process."withLabel:GPU".containerOptions = "--gpus all"
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
            //envWhitelist = "" // if your cluster sets a variable to indicate which GPU has been assigned you will want to allow it here
        }
        process."withLabel:GPU".containerOptions = "--nv"
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }


    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = "32 GB" 
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

